//file:noinspection GrUnresolvedAccess
String getCommit() {
    def stdout = new ByteArrayOutputStream()

    exec {
        commandLine "git", "rev-parse", "--short", "HEAD"
        standardOutput = stdout
    }

    return stdout.toString().trim()
}

plugins {
    alias(libs.plugins.nexus.staging)
}

def projectVersion = findProperty("github.tag") ?: getCommit()
println("project version: ${projectVersion}")

nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/"
    packageGroup = "io.github.whilein"
    username = findProperty('sonatype.user')
    password = findProperty('sonatype.password')
}

allprojects {
    group "io.github.whilein.wcommons"
    version projectVersion
}

subprojects {
    apply plugin: "signing"
    apply plugin: "java"
    apply plugin: "java-library"
    apply plugin: "maven-publish"

    apply from: file("module.gradle")

    repositories {
        mavenCentral()
    }

    signing {
        sign publishing.publications
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                pom {
                    name = project.name
                    description = project.description

                    url = "https://github.com/whilein/wcommons"

                    organization {
                        name = 'io.github.whilein'
                        url = 'https://github.com/whilein'
                    }

                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/whilein/wcommons/issues'
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    scm {
                        url = 'https://github.com/whilein/wcommons'
                        connection = 'scm:https://github.com/whilein/wcommons.git'
                        developerConnection = 'scm:git://github.com/whilein/wcommons.git'
                    }

                    developers {
                        developer {
                            id = "whilein"
                            name = "whilein"
                            email = "whilein.1@gmail.com"
                        }
                    }
                }

                groupId = project.group
                artifactId = project.name
                version = project.version

                from components.java
            }
        }

        repositories {
            mavenLocal()

            maven {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"

                credentials {
                    username = findProperty('sonatype.user')
                    password = findProperty('sonatype.password')
                }
            }
        }
    }

    dependencies {
        compileOnly libs.lombok
        annotationProcessor libs.lombok

        testCompileOnly libs.lombok
        testAnnotationProcessor libs.lombok

        compileOnly libs.annotations
        testCompileOnly libs.annotations

        testImplementation libs.junit.api
        testRuntimeOnly libs.junit.engine
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        targetCompatibility = JavaVersion.VERSION_17
        sourceCompatibility = JavaVersion.VERSION_17
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    test {
        useJUnitPlatform()

        testLogging {
            showStandardStreams = true

            exceptionFormat "short"
            events("started", "skipped", "failed")
        }
    }
}